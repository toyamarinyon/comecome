---
// Component Imports
import BaseHead from "../components/BaseHead.astro";
import BlogHeader from "../components/BlogHeader.astro";
import BlogPostPreview from "../components/BlogPostPreview.astro";

interface MarkdownFrontmatter {
  publishDate: number;
  draft?: boolean;
}

// Component Script:
// You can write any JavaScript/TypeScript that you'd like here.
// It will run during the build, but never in the browser.
// All variables are available to use in the HTML template below.
let title = "Satoshi Toyama | Developer";
let description =
  "I'm a software developer in Japan. I'm considering how to write code clarity.";
let permalink = Astro.site;

// Data Fetching: List all Markdown posts in the repo.

let allPosts = await Astro.glob<MarkdownFrontmatter>("./posts/*.md");
allPosts = allPosts
  .filter((post) => post.frontmatter.draft == null || post.frontmatter.draft == false)
  .sort(
    (a, b) =>
      new Date(b.frontmatter.publishDate).valueOf() - new Date(a.frontmatter.publishDate).valueOf()
  );

// Full Astro Component Syntax:
// https://docs.astro.build/core-concepts/astro-components/
---

<html lang="en">
  <head>
    <BaseHead {title} {description} {permalink} />

    <style>
      .content {
        /* margin-top: 4rem; */
        margin-bottom: 8rem;
      }

      .content :global(main > * + *) {
        margin-top: 1rem;
      }

      .intro {
        padding-bottom: 4rem;
        margin-bottom: 2rem;
        border-bottom: 4px solid var(--theme-divider);
      }

      .intro > * {
        margin: 0;
      }

      .latest {
        font-size: 2.5rem;
        font-weight: 700;
      }
      h1 {
        font-size: 2.3rem;
        /* font-weight: normal; */
        color: var(--color-gray-900);
      }
      .wrapper {
        margin-top: 1.2rem;
      }
      header {
        margin-bottom: 3rem;
      }
      header p {
        color: var(--color-gray-900);
        font-size: 1.2rem;
        /* font-weight: bold; */
        line-height: 1.2;
      }
      header p strong {
        color: var(--theme-accent);
        font-weight: 900;
      }
      header img {
        height: 2rem;
      }
      header .hi {
        display: flex;
        align-items: center;
        font-size: 4rem;
      }
      header .hi img {
        margin-right: 1rem;
      }
      @media (min-width: 37.75em) {
        header img {
          height: 4rem;
        }
      }
      header .hi {
        font-size: 3rem;
      }
    </style>
  </head>

  <body>
    <BlogHeader />
    <div class="wrapper">
      <main class="content">
        <header>
          <div class="hi">
            <img src="/assets/hi.png" />
            <span>ðŸ‘‹</span>
          </div>
          <p>
            I'm a software developer in Japan. I'm considering how to write <strong
              >code clarity</strong
            >.
          </p>
        </header>

        <section aria-label="Blog post list">
          {allPosts.map((p) => <BlogPostPreview post={p} />)}
        </section>
      </main>
    </div>
  </body>
</html>
